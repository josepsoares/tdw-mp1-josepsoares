name: ci-action

on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches:
      - master

  # Allows to run this workflow manually
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-18.04

    # Sequence of tasks that make the job
    steps:
      # Getting node.js and cache yarn and stuff
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'

      # Installing dependecies with yarn
      - name: Install dependecies
        run: |
          echo Installing things...
          yarn install --prefer-offline
          echo Instalation finished

      # Task to format project code with Prettier
      - name: Formatting
        run: |
          echo Formatting...
          yarn format
          echo Formatting finished

      # Task to verify project code with Eslint
      - name: Linting with eslint
        run: |
          echo Linting...
          yarn lint
          echo Linting finished

      # Task to test project code with Jest
      - name: Testing with jest
        run: |
          echo Testing with jest and getting coverage...
          yarn test
          echo Testing finished

      # Only run the coverage once
      - name: Get Coverage for badge
        run: |
          # var SUMMARY = [
          #   '',
          #   '=============================== Coverage summary ===============================',
          #   'Statements   : 32.5% ( 39/120 )',
          #   'Branches     : 38.89% ( 21/54 )',
          #   'Functions    : 21.74% ( 5/23 )',
          #   'Lines        : 31.93% ( 38/119 )',
          #   '================================================================================',
          #   ''
          # ];
          # SUMMARY = SUMMARY.split('\n')[5]; // 'Lines        : 31.93% ( 38/119 )'
          # SUMMARY = SUMMARY.split(':')[1].split('(')[0].trim(); // '31.93%'
          SUMMARY="$(yarn jest --coverageReporters='text-summary' | tail -2 | head -1)"
          TOKENS=($SUMMARY)
          # process.env.COVERAGE = '31.93%';
          echo "COVERAGE=$(echo ${TOKENS[2]})" >> $GITHUB_ENV

          # var REF = 'refs/pull/27/merge.json';
          REF=${{ github.ref }}
          # console.log('github.ref: ' + REF);
          echo "github.ref: $REF"
          # var PATHS = REF.split('/');
          IFS='/' read -ra PATHS <<< "$REF"
          # var BRANCH_NAME = PATHS[1] + PATHS[2];
          BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
          # console.log(BRANCH_NAME); // 'pull_27'
          echo $BRANCH_NAME
          # process.env.BRANCH = 'pull_27';
          echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV

      - name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 7d4c25ef2e97e8de523ef7c1fee26e8e
          filename: tdw-mp1-josepsoares__${{ env.BRANCH }}.json
          label: Test Coverage
          message: ${{ env.COVERAGE }}
          color: green
          namedLogo: jest

      - name: build-deploy
        if: contains( github.ref, 'master')
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
        run: |
          echo Building...
          export CONTENTFUL_SPACE_ID=$CONTENTFUL_SPACE_ID
          export CONTENTFUL_ACCESS_TOKEN=$CONTENTFUL_ACCESS_TOKEN
          yarn build
          echo Building finished
          echo Deploying to netlify...
          npx netlify-cli deploy --site "$NETLIFY_SITE_ID" --auth "$NETLIFY_AUTH_TOKEN" --prod
          echo Deploying finished! Now the website has the new contentful post
